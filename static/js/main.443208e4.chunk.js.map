{"version":3,"sources":["redux/thunk/action.js","component/Result.jsx","redux/actions.js","component/Login.jsx","component/Quiz.jsx","component/NotFound.jsx","App.js","redux/index.js","redux/reducers.js","index.js"],"names":["fetchQuestions","dispatch","a","fetch","response","json","results","type","payload","mapDispatchToProps","resetScore","connect","state","name","user","score","Object","values","result","reduce","acc","item","className","to","onClick","addName","useEffect","useState","setName","history","useHistory","activeButton","trim","placeholder","onChange","e","target","value","disabled","preventDefault","push","addResult","quiz","index","setIndex","currentQuestion","question","currentAnswer","answer","heandleClick","length","obj","activeNext","activePrev","NotFound","basename","exact","path","component","Quiz","Login","Result","initialState","rootReducer","combineReducers","action","points","store","createStore","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.443208e4.chunk.js","sourcesContent":["export const SET_QESTION = 'SET_QESTION';\r\n\r\nexport const fetchQuestions = () => {\r\n  return async (dispatch) => {\r\n    const response = await fetch(\r\n      `https://opentdb.com/api.php?amount=10&category=9&difficulty=medium&type=boolean`\r\n    );\r\n    const json = await response.json();\r\n    const results = json.results;\r\n    dispatch({\r\n      type: SET_QESTION,\r\n      payload: results,\r\n    });\r\n  };\r\n};\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { fetchQuestions } from '../redux/thunk/action';\r\nimport { resetScore } from '../redux/actions';\r\n\r\nconst Result = ({ score, fetchQuestions, resetScore, name }) => (\r\n  <div className='score-card'>\r\n    <div className='score'>\r\n      {name},you scored {score} / 10 correct answers!\r\n      {score >= 7 ? 'You Won!!' : 'You Lost'}\r\n    </div>\r\n    <Link to='/'>\r\n      <button\r\n        className='playBtn'\r\n        onClick={(() => fetchQuestions(), () => resetScore())}\r\n      >\r\n        Play again!\r\n      </button>\r\n    </Link>\r\n    <Link to='/login'>\r\n      <button className='playBtn' onClick={() => fetchQuestions()}>\r\n        New game\r\n      </button>\r\n    </Link>\r\n  </div>\r\n);\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    name: state.user.name,\r\n    score: Object.values(state.user.result).reduce(\r\n      (acc, item) => acc + item,\r\n      0\r\n    ),\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  fetchQuestions,\r\n  resetScore,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Result);\r\n","export const ADD_NAME = 'ADD_NAME';\r\nexport const RESEST_SCORE = 'RESEST_SCORE';\r\nexport const ADD_RESULT = 'ADD_RESULT';\r\n\r\nexport const addName = (payload) => ({\r\n  type: ADD_NAME,\r\n  payload,\r\n});\r\nexport const resetScore = () => ({\r\n  type: RESEST_SCORE,\r\n});\r\nexport const addResult = (payload) => ({\r\n  type: ADD_RESULT,\r\n  payload,\r\n});\r\n","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addName } from '../redux/actions';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { fetchQuestions } from '../redux/thunk/action';\r\n\r\nconst Login = ({ addName, fetchQuestions }) => {\r\n  useEffect(() => {\r\n    fetchQuestions();\r\n  }, [fetchQuestions]);\r\n  const [name, setName] = useState('');\r\n  let history = useHistory();\r\n\r\n  const activeButton = name.trim() ? false : true;\r\n\r\n  const heandleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    addName(name);\r\n    history.push('/');\r\n  };\r\n  return (\r\n    <>\r\n      <h1>Welcome!</h1>\r\n      <p className='gray'>Enter your name</p>\r\n      <form>\r\n        <input\r\n          placeholder='Name'\r\n          type='text'\r\n          onChange={(e) => setName(e.target.value)}\r\n        />\r\n\r\n        <button disabled={activeButton} onClick={heandleSubmit} type='submit'>\r\n          Start\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  addName,\r\n  fetchQuestions,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Login);\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addResult } from '../redux/actions';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Quiz = ({ name, quiz, addResult }) => {\r\n  const history = useHistory();\r\n  const [index, setIndex] = useState(0);\r\n  let currentQuestion = quiz[index].question;\r\n  let currentAnswer = quiz[index].answer;\r\n\r\n  const heandleClick = (e) => {\r\n    const result = e.target.value;\r\n    if (result === currentAnswer && quiz.length === index + 1) {\r\n      setIndex(index + 1);\r\n      history.push('/result');\r\n    } else if (result !== currentAnswer && quiz.length === index + 1) {\r\n      history.push('/result');\r\n    } else {\r\n      setIndex(index + 1);\r\n    }\r\n    const obj = {\r\n      [index]: result === currentAnswer ? 1 : 0,\r\n    };\r\n\r\n    return addResult(obj);\r\n  };\r\n\r\n  const activeNext = quiz.length - 1 === index;\r\n  const activePrev = index === 0;\r\n  return (\r\n    <div>\r\n      <h2 className='App-link'>\r\n        <small>Greetings</small> {name}!\r\n      </h2>\r\n      <span>\r\n        question {index + 1} from {quiz.length}\r\n      </span>\r\n      <div>\r\n        <h3>{currentQuestion}</h3>\r\n      </div>\r\n      <div className='buttons'>\r\n        <div className='rows'>\r\n          <button\r\n            className='button-prev'\r\n            disabled={activePrev}\r\n            onClick={() => setIndex(index - 1)}\r\n          >\r\n            {`<<`}\r\n          </button>\r\n          <button\r\n            className='button-next'\r\n            disabled={activeNext}\r\n            onClick={() => setIndex(index + 1)}\r\n          >\r\n            {`>>`}\r\n          </button>\r\n        </div>\r\n        <div className='rows'>\r\n          <button className='button-true' onClick={heandleClick} value='True'>\r\n            TRUE\r\n          </button>\r\n          <button className='button-false' onClick={heandleClick} value='False'>\r\n            FALSE\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    name: state.user.name,\r\n    quiz: state.quiz,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  addResult,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Quiz);\r\n","import React from 'react';\r\n\r\nexport const NotFound = () => {\r\n  return (\r\n    <div>\r\n      <h1>404 not found</h1>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\nimport {\n  HashRouter,\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from 'react-router-dom';\nimport './App.css';\nimport Result from './component/Result';\nimport Login from './component/Login';\nimport Quiz from './component/Quiz';\nimport { NotFound } from './component/NotFound';\nimport { connect } from 'react-redux';\n\nconst App = ({ name = '' }) => {\n  return (\n    <HashRouter basename='/'>\n      <div className='App'>\n        <Router>\n          <Switch>\n            <Route exact path='/' component={Quiz}>\n              {name ? <Quiz /> : <Redirect to='/login' />}\n            </Route>\n            <Route path='/login' component={Login}>\n              <Login />\n            </Route>\n            <Route path='/result' component={Result}>\n              {name ? <Result /> : <Redirect to='/login' />}\n            </Route>\n            <Route path='*' component={NotFound} />\n          </Switch>\n        </Router>\n      </div>\n    </HashRouter>\n  );\n};\nconst mapStateToProps = (state) => {\n  return {\n    name: state.user.name,\n  };\n};\n\nexport default connect(mapStateToProps)(App);\n","import { ADD_NAME, RESEST_SCORE, ADD_RESULT } from './actions';\r\nimport { SET_QESTION } from './thunk/action';\r\n\r\nconst initialState = {};\r\nexport const nameReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_NAME:\r\n      return {\r\n        ...state,\r\n        name: action.payload,\r\n        points: 0,\r\n      };\r\n    case ADD_RESULT:\r\n      return { ...state, result: { ...state.result, ...action.payload } };\r\n    case RESEST_SCORE:\r\n      return { ...state, result: {} };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport const quizReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case SET_QESTION:\r\n      return [...action.payload];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { nameReducer, quizReducer } from './index';\r\n\r\nexport const rootReducer = combineReducers({\r\n  user: nameReducer,\r\n  quiz: quizReducer,\r\n});\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport { rootReducer } from './redux/reducers';\nimport { compose, createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}